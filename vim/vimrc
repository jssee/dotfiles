set nocompatible

set encoding=utf-8 nobomb

set mouse=a

set ruler

set number

set tw=100

set formatoptions+=t

set title

set incsearch

set scrolloff=5

set nostartofline

set showcmd

set hidden

" Backspace shenanigans 
set backspace=indent,eol,start
set modelines=0 

" Search
set incsearch
set ignorecase
set smartcase

" No swap files
set nobackup
set noswapfile
set directory^=$HOME/.vim/tmp//

" Tabs to spaces
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent
set copyindent
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins

" Remap semicolon to colon
:nmap ; :

" Remap ctrl-c to esc
inoremap <C-c> <Esc><Esc>

" Cylce buffers with tab
:nnoremap <Tab> :bnext<CR>
:nnoremap <S-Tab> :bprevious<CR>

" Open new files in current directory 
:set autochdir


" Map leader to space
let mapleader = "\<Space>"

" Syntax colors
filetype on
set termguicolors
set background=dark
set t_Co=256
syntax enable

"
" ** Plugins **
"

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

" ES6 syntax
Plugin 'othree/yajs.vim'

" Stylus Syntax
Plugin 'wavded/vim-stylus'

" Pug syntax
Plugin 'digitaltoad/vim-pug'

" JSX syntax
Plugin 'mxw/vim-jsx'

" HTML5 syntax
Plugin 'othree/html5.vim'

" CSS syntax
Plugin 'hail2u/vim-css3-syntax'
Plugin 'alexlafroscia/postcss-syntax.vim'

" Automatic closing of quotes, parenthesis, brackets, etc.
Plugin 'Raimondi/delimitMate'

" Airline 
Plugin 'vim-airline/vim-airline'

" ctrlP
Plugin 'ctrlpvim/ctrlp.vim'

" Emmet
Plugin 'mattn/emmet-vim'

" Prettier
Plugin 'prettier/vim-prettier'

" Nerdtree
Plugin 'scrooloose/nerdtree'

" All plugins must be added before the following line
call vundle#end()
filetype plugin indent on

"
" ** Plugin Settings **
"

" Remap emmet trigger
let g:user_emmet_leader_key='<C-A>'

" ctrlP config
let g:ctrlp_map = '<leader>t'
map <leader>C :CtrlPClearCache<cr>
let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']

" Airline config
set noshowmode
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline_skip_empty_sections=1
let g:airline#extensions#tabline#enabled = 1

" Prettier config
let g:prettier#config#bracket_spacing = 'true'

" theme 
" hi Conditional ctermfg = green
" hi LineNr ctermfg = magenta
" hi Tag ctermfg = white
" hi htmlTag ctermfg = blue
" hi htmlTagName ctermfg = white
" hi Comment ctermfg = red
" hi Statement ctermfg = blue
" hi Function ctermfg = red
" hi Identifier ctermfg = red
" hi Exception ctermfg = green
" hi Special ctermfg = green
" hi String ctermfg = green
" hi MatchParen ctermbg=none cterm=underline ctermfg=magenta
" hi javascriptExport ctermfg = cyan
" hi javascriptImport ctermfg = yellow
" hi javascriptFuncKeyword ctermfg = red
" hi javascriptClassKeyword ctermfg = red
