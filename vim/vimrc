set nocompatible
set encoding=utf-8 nobomb
filetype off

" map leader to space
:let mapleader = "\<Space>"

" keep swp files in this directory
set directory^=$HOME/.vim/tmp//

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

" es6 syntax
Plugin 'othree/yajs.vim'

" Stylus Syntax
Plugin 'wavded/vim-stylus'

" html5 syntax
Plugin 'othree/html5.vim'

" css3 syntax
Plugin 'hail2u/vim-css3-syntax'

" automatic closing of quotes, parenthesis, brackets, etc.
Plugin 'Raimondi/delimitMate'

" tab line
Plugin 'vim-airline/vim-airline'

" ctrlP
Plugin 'ctrlpvim/ctrlp.vim'

" emmet
Plugin 'mattn/emmet-vim'

" git gutter
Plugin 'airblade/vim-gitgutter'

" Prettier
Plugin 'prettier/vim-prettier'

" all plugins must be added before the following line
call vundle#end()
filetype plugin indent on

" remap emmet trigger
let g:user_emmet_leader_key='<C-A>'

" enable ruler and line numbers
set ruler
set number

" make ctrlp faster
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

" enable solarized theme
syntax enable
let g:solarized_termtrans=1
let g:solarized_termcolors=256
set background=dark

" soft tabs ftw
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

" airline config
set noshowmode
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline_skip_empty_sections=1
let g:airline#extensions#tabline#enabled = 1

" wrap text
set tw=100
set formatoptions+=t

" ignore case of searches
set ignorecase

" highlight dynamically as pattern is typed
set incsearch

" show the filename in the window titlebar
set title

" show the (partial) command as it’s being typed
set showcmd

" don’t reset cursor to start of line when moving around
set nostartofline

" start scrolling five lines before the horizontal window border
set scrolloff=5

" nicer netrw
let g:netrw_banner=0
let g:netrw_liststyle=3
let g:netrw_list_hide='.*\.swp$,\~$,\.orig$'

" remap ctrl-c to esc
inoremap <C-c> <Esc><Esc>

" window switching with arrow keys
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

" strip trailing spaces
fun! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
