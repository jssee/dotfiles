[user]
  name = Jesse Hoyos
  email = jesse@mojotech.com

[alias]
  # remind yourself
  aliases = config --get-regexp alias

  # branch
  b  = branch
  bc = checkout -b
  bx = branch -d
  bX = branch -D
  branches = branch -a

  # Switch to a branch, creating if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # checkout
  co  = checkout

  # fetch
  f   = fetch
  p   = pull
  fo  = fetch origin

  # status
  s  = status

  # rebase
  rom = rebase origin/master
  i   = rebase -i origin/master
  s1  = !sh -c \"git stash save -u | grep 'No local changes to save' && git $* || (git $* && git stash pop) \"
  s2  = !sh -c \"git stash save -u | grep 'No local changes to save' && git $* || (git $*) \"
  u   = !sh -c \"git s2 fetch origin master && git rebase origin/master && git stash pop \"

  # misc
  leaderboard = shortlog --summary --numbered

  # review
  # list files which have changed since REVIEW_BASE
  files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
  # Same as above, but with a diff stat instead of just names
  # (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")
  # Open all files changed since REVIEW_BASE in Vim tabs
  # Then, run fugitive's :Gdiffsplit in each tab
  review = !nvim -p $(git files) +\"tabdo Gdiffsplit $REVIEW_BASE\"

  # hub
  o = pull-request
  oo = pull-request -o

  #-------------- display logs-------------
  #define format...
  mylogbase = log --pretty=format:'%Cred%h %Cgreen%<(10,trunc)%cd %C(auto)%d%Creset%s %C(bold blue)%an' --abbrev-commit
  #...and use it!
	mylog = !git mylogbase --date=relative
	mylogshort = !git mylogbase --date=short
  #...with a graph (DAG!)
  graph = !git mylog --graph
  #last changes
  changes = !git mylog --name-status
  #users stats
  statdev = shortlog -sn

  ###=>Standup logs ;)
  #-For the user you want
	standup4 = !sh -c \"git mylogbase --since='3 days' --date=short --author='$1'\"
  #-For me
	standup = !git standup4 `git config user.name`
  #-Try to solve problem of Monday!
  standupbase = !"git mylogbase --reverse --branches --date=short --since='$(if [[ "Mon" == "$(date +%a)" ]]; then echo "3 days"; else echo "yesterday"; fi)' "

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore_global
  attributesfile = ~/.gitattributes

# URL shorthands
# gh:user/repo
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "gh:"
  pushInsteadOf = "git://github.com/"
